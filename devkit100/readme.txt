
　ソースコード等いろいろセットです。

■構成

dlltemplate/	キャラクターDLL初期ソースファイル
dlltemplate_stage/	ステージDLL初期ソースファイル
goluah/		本体関連ソース一式
manual/		作成マニュアル
tools/		製作関連ツール


■古い開発セットを使用して製作中の方へ

　ver0.95 から ver0.99への移行は、以下のファイルの差し替えで行うことができます。
	gobject.h , gobjbase.h , gobjbase.cpp 
差し替えだけでうまくいくはずですが、あんまし厳重なチェックをやったわけではないので、
ところどころ通らないところが出るかもしれませんが、手動で解決してください。

　2004.04.10 追記 : 共有DLLは非使用となりました。
　2004.05.04 追記 : ver1.0への対応も同様です。

　尚、ver0.95→0.99で システム-DLL間でやり取りする構造体の一部がなくなったので、
ver0.99のシステムは 0.8 < ver < 0.99 のDLLを受け付けません。上記の移行作業の後、
リビルドを行ってください。


■略称

　VisualStudio.net / VisualC++.net → VC
　Borland C Compiler → BCC


■BCCに関して

　BCCを使用する場合、BCC Developer （BCCのコンパイラ・リンカを利用するフリーの
統合開発環境・・・で、合ってる？）を使用するものと仮定して話を進めています。


■本体、初期キャラクターのソースに関して

　VCのプロジェクトで入っています。詳しくは中のReadMe.txtを参照してください。

　これらはDirect3D（本体は他にInput,Sound,Show）のライブラリをリンクする必要があります。
　BCCを利用してビルドを行った場合、DirectXSDKがインストールされていたとしても、
コンパイルは通ってもリンクが通らないので、exe、dll を生成することはできません。
（VC/BCCでのライブラリの形式の違いによるようです。もしかしたらがんばれば
　できるのかもしれないけど、今のところわかりません。）

　各プロジェクトごとに適切なプリプロセッサの定義を加える必要があります。

　ツール類もMFCとかの関係でビルドできないかも。


■モジュール定義ファイル(.def)に関して

　DLLのビルドにはVCかBCCのどっちかを使うと思いますが、両者でモジュール定義ファイルを
別々に用意しています。（コンパイル後に生成される関数名が異なるようです？）

　VCを使用する場合：
　　　character_vc.def をプロジェクトから参照できる場所に置き、
　　　プロジェクトのプロパティ→リンカ→入力 設定で、モジュール定義ファイルに
　　　character_vc.def を指定してください。

　BCCを使用する場合：
　　　character_bcc.def をプロジェクトに追加します。

　2004.04.10 追記:
　ステージの場合同様にstage_vc.def、stage_bcc.def を提供しています。
使い方は同様です。

--------------------------------------------------------------------------------
2004/05/05 aki ( sarasiage@hotmail.com )

